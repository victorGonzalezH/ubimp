/* 
Atributo position en CSS
static: SI toma en cuenta el flujo de la pagina, es decir el elemento se acomodara
de acuerdo a como se vaya maquetando en el html. NO toma en cuenta las propiedades
top, bottom, left y right

relative: SI toma en cuenta el flujo de la pagina al igual que static, sin embargo
SI toma en cuenta las propiedades top, bottom, left y right, es decir si un elemento
es relative y se aplica cualquiera de una de estas propiedades, el elemento se movera
con respecto al lugar que le hubiera correspondido.


*/

/* @import '../../../node_modules/material-design-icons/iconfont/material-icons.css'; */

.ubimp-container 
{
    /*Tipo de "display" del contenedor, se usa flex que permite usar un contenedor flex*/
    display: flex;
    /*La direccion de cada item en el contenedor sera columnas, el valor column apilara
    los items desde arriba hacia abajo */
    flex-direction: column; 
    
    /*Dado que es el contenedor principal, su posicion sera relativa al body
    Esto hace que ubimp-container se mueva con el scrolling de toda la pagina
    */
    position: absolute; 
    
    top: 0; /*Sin margen superior*/
    bottom: 0; /*Sin margen inferior*/
    left: 0; /*Sin margen izquierda*/
    right: 0; /*Sin margen derecha*/
}

.sidenav-container 
  {
    position: relative; 
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;

  }
  
  
  .is-mobile .sidenav-container 
  {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container.
    This allows the `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
  
    
  }
  
  
  .ubimp-toolbar
  {
    position: relative;
        
  }

  
  .is-mobile .ubimp-toolbar 
  {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
  }

  
.fill-remaining-space 
{
  /* This fills the remaining space, by using flexbox. 
     Every toolbar row uses a flexbox row layout. */
  flex: 1 1 auto;
}



  h1.example-app-name 
  {
    margin-left: 8px;
  }

  
  @media (max-width: 320px)
  {
    mat-sidenav
    {
      width: 75%;
    }
  }


  @media (min-width: 321px) and (max-width: 360px)
  {
    mat-sidenav
    {
      width: 75%;
    }
  }



  @media (min-width: 361px) and (max-width: 375px)
  {
    mat-sidenav
    {
      width: 75%;
    }
  }


  @media (min-width: 376px) and (max-width: 411px)
  {
    mat-sidenav
    {
      width: 65%;
    }
  }


  @media (min-width: 412px) and (max-width: 500px)
  {
    mat-sidenav
    {
      width: 45%;
    }
  }


  @media (min-width: 501px) and (max-width: 600px)
  {
    mat-sidenav
    {
      width: 40%;
    }
  }



  @media (min-width: 601px) and (max-width: 800px)
  {
    mat-sidenav
    {
      width: 25%;
    }
  }


  @media (min-width: 801px) and (max-width: 1024px)
  {
    mat-sidenav
    {
      width: 25%;
    }
  
  }


  @media (min-width: 1025px) and (max-width: 1200px)
  {
    mat-sidenav
    {
      width: 20%;
    }
  
  }


  @media (min-width: 1201px) and (max-width: 1366px)
  {
    mat-sidenav
    {
      width: 18%;
    }
  
  }